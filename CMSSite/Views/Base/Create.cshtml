
@{
    Layout = "_Layout";

}

<script>var KTAppSettings = { "breakpoints": { "sm": 576, "md": 768, "lg": 992, "xl": 1200, "xxl": 1200 }, "colors": { "theme": { "base": { "white": "#ffffff", "primary": "#8950FC", "secondary": "#E5EAEE", "success": "#1BC5BD", "info": "#8950FC", "warning": "#FFA800", "danger": "#F64E60", "light": "#F3F6F9", "dark": "#212121" }, "light": { "white": "#ffffff", "primary": "#E1E9FF", "secondary": "#ECF0F3", "success": "#C9F7F5", "info": "#EEE5FF", "warning": "#FFF4DE", "danger": "#FFE2E5", "light": "#F3F6F9", "dark": "#D6D6E0" }, "inverse": { "white": "#ffffff", "primary": "#ffffff", "secondary": "#212121", "success": "#ffffff", "info": "#ffffff", "warning": "#ffffff", "danger": "#ffffff", "light": "#464E5F", "dark": "#ffffff" } }, "gray": { "gray-100": "#F3F6F9", "gray-200": "#ECF0F3", "gray-300": "#E5EAEE", "gray-400": "#D6D6E0", "gray-500": "#B5B5C3", "gray-600": "#80808F", "gray-700": "#464E5F", "gray-800": "#1B283F", "gray-900": "#212121" } }, "font-family": "Poppins" };</script>
<script src="~/assets-site/css/login/classic/plugins.bundle.js"></script>
<script src="~/assets-site/css/login/classic/prismjs.bundle.js"></script>
<script src="~/assets-site/css/login/plugins.bundle.js"></script>
<script src="~/assets-site/css/login/classic/general.js"></script>
<link href="/assets-site/css/fstyle.bundle.css" rel="stylesheet" />
<link href="~/assets-site/plugins/sweetalert/sweetalert.css" rel="stylesheet" />
<script src="~/assets-site/plugins/sweetalert/sweetalert.min.js"></script>

<link href="/assets-site/css/fstyle.bundle.css" rel="stylesheet" />

<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/10.16.6/sweetalert2.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/10.16.6/sweetalert2.all.js"></script>


<div class="section-full p-tb80 inner-page-padding stick_in_parent ">
    <div class="container">
        <div class="row ">
            <div class="login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white" id="kt_login">
                <!--begin::Content-->
                <div class="login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto">
                    <!--begin::Content body-->
                    <div class="d-flex flex-column-fluid flex-center">
                        <!--begin::Signin-->
                        <div class="login-form login-signin">
                            <!--begin::Form-->
                            <form class="form" novalidate="novalidate" id="kt_login_signin_form">
                                <!--begin::Title-->
                                <div class="pb-13 pt-lg-0 pt-5">
                                    <h3 class="font-weight-bolder text-dark font-size-h4 font-size-h1-lg">Üye Ol</h3>
                                </div>
                                <!--begin::Title-->
                                <!--begin::Form group-->

                                <div class="row form-group">
                                    <div class="col-md-12">
                                        <label class="font-size-h6 font-weight-bolder text-dark">Mail</label>
                                        <input required class="form-control form-control-solid h-auto py-6 px-6 rounded-lg" type="email" name="UserName" id="UserName" autocomplete="off" />
                                    </div>
                                </div>

                                <div class="row form-group">
                                    <div class="col-md-6">
                                        <label class="font-size-h6 font-weight-bolder text-dark">Şifre</label>
                                        <input required class="form-control form-control-solid h-auto py-6 px-6 rounded-lg" type="password" name="Pass" id="Pass" autocomplete="off" />
                                    </div>
                                    <div class="col-md-6">
                                        <label class="font-size-h6 font-weight-bolder text-dark">Şifre Tekrar</label>
                                        <input required class="form-control form-control-solid h-auto py-6 px-6 rounded-lg" type="password" name="PassReply" id="PassReply" autocomplete="off" />
                                    </div>
                                </div>

                                <div class="row form-group">
                                    <div class="col-md-6">
                                        <label class="font-size-h6 font-weight-bolder text-dark">Ad</label>
                                        <input required class="form-control form-control-solid h-auto py-6 px-6 rounded-lg" type="text" name="Name" id="Name" autocomplete="off" />
                                    </div>

                                    <div class="col-md-6">
                                        <label class="font-size-h6 font-weight-bolder text-dark">Soyad</label>
                                        <input required class="form-control form-control-solid h-auto py-6 px-6 rounded-lg" type="text" name="Surname" id="Surname" autocomplete="off" />
                                    </div>
                                </div>


                                <div class="row form-group">
                                    <div class="col-md-6">
                                        <label class="font-size-h6 font-weight-bolder text-dark">Telefon</label>
                                        <input required class="form-control form-control-solid h-auto py-6 px-6 rounded-lg" type="text" name="Phone1" id="Phone1" autocomplete="off" />
                                    </div>

                                    <div class="col-md-6">
                                        <label class="font-size-h6 font-weight-bolder text-dark">Firma</label>
                                        <input class="form-control form-control-solid h-auto py-6 px-6 rounded-lg" type="text" name="Company" id="Company" autocomplete="off" />
                                    </div>
                                </div>


                                <div class="row form-group">
                                    <div class="col-md-6">
                                        <label class="font-size-h6 font-weight-bolder text-dark">Kullanıcı Tipi</label>
                                        <select class="form-control form-control-solid" required id="dp_UserType" name="dp_UserType">
                                            <option value="2">Bayi</option>
                                            <option value="3">Mimar</option>
                                        </select>
                                    </div>
                                </div>

                                <div class="row form-group">
                                    <div class="col-md-12">

                                        <div class="text-right-remov">
                                            <input type="checkbox" name="Custom3" required="" />&nbsp;<a class="popup-modal" href="#test-modal">Kullanım Koşullarını</a> kabul ediyorum.&nbsp;&nbsp;&nbsp;
                                            <div id="test-modal" class="white-popup mfp-hide">
                                                <h3>Kullanım Koşulları</h3>
                                                <p>KİŞİSEL VERİLERİN İŞLENMESİ VE GÜVENLİĞİ FORMU Bu dokumanı onaylayarak 6698 Sayılı Kişisel Verilerin Korunması Kanunu’nun (“Kanun”) 5. Maddesi kapsamında Şirketimize iletmiş olduğunuz kişisel verilerinizin, hizmetlerimiz hakkında bilgi vermek ve sizlerle iletişime geçmek için kullanımına açıkça rıza göstermektesiniz.</p>
                                                <p>Kişisel verileriniz kanuni düzenlemelere uygun olarak ticari teamüllerde öngörülen sürelerde işlenecektir.</p>
                                                <p>Kanun kapsamında Veri Sorumlusu Şirketimiz; CUHADAROĞLU olup Kanun’daki tüm sorumluluk ve yükümlülüklerine uymayı kabul etmektedir. Kişisel Verilerinizin, Veri Sorumlusu Şirketimizin belirleyeceği yurtiçi veya yurtdışında bulunan 3. kişilere işbu verilerin saklanması, depolanması ve açık rıza gösterilen amaçlarla işlenmesi için aktarılmasına açıkça onay vermektesiniz. Kanuni haklarınız kapsamında; dilediğiniz zaman Veri Sorumlusu Şirketimize başvurarak tarafınıza ait kişisel verilerin işlenip işlenmediğini öğrenme, işlenen kişisel verileri varsa bunlara ilişkin bilgi talep etme, kişisel verilerin işlenme amacını ve bu verilerin amaca uygun kullanılıp kullanılmadığını öğrenme, kişisel verilerinin aktarıldığı üçüncü kişileri bilme, kişisel verilerindeki hataların düzeltilmesini ve eğer aktarım yapılmışsa ilgili üçüncü kişiden bu düzeltmenin istenmesini talep etme, kişisel verilerin işlenmesini gerektiren sebeplerin ortadan kalkması halinde bu verilerin silinmesini, yok edilmesini ya da anonim hale getirilmesini isteme ve eğer aktarım yapılmışsa bu talebin aktarılan üçüncü kişiye iletilmesini isteme, işlenen verilerin neticesinde kişi ile ilintili olumsuz bir sonuç çıkmasına itiraz etme, Kanun’a aykırı veri işleme nedeniyle zararının ortaya çıkması halinde zararını yasalar çerçevesinde talep etme hakkınız mevcuttur.</p>
                                            </div>
                                        </div>
                                        <script>
                                            $(document).ready(function () {
                                                $('.popup-modal').magnificPopup({
                                                    type: 'inline',
                                                    midClick: true,
                                                    mainClass: 'mfp-fade'
                                                });
                                            })
                                        </script>
                                        <style>

                                            .white-popup {
                                                position: relative;
                                                background: #FFF;
                                                padding: 40px;
                                                width: auto;
                                                max-width: 500px;
                                                margin: 20px auto;
                                                transition: 1s all;
                                            }

                                            .mfp-bg {
                                            }

                                            .mfp-fade.mfp-bg {
                                                opacity: 0;
                                                -webkit-transition: all 0.15s ease-out;
                                                -moz-transition: all 0.15s ease-out;
                                                transition: all 0.15s ease-out;
                                            }


                                                /* overlay animate in */

                                                .mfp-fade.mfp-bg.mfp-ready {
                                                    opacity: 0.8;
                                                }


                                                /* overlay animate out */

                                                .mfp-fade.mfp-bg.mfp-removing {
                                                    opacity: 0;
                                                }

                                            .mfp-fade.mfp-wrap .mfp-content {
                                                opacity: 0;
                                                transition: all 0.4s ease-out;
                                            }

                                            .mfp-fade.mfp-wrap.mfp-ready .mfp-content {
                                                opacity: 1;
                                            }

                                            .mfp-fade.mfp-wrap.mfp-removing .mfp-content {
                                                opacity: 0;
                                            }
                                        </style>

                                    </div>
                                </div>

                                <!--end::Form group-->
                                <!--begin::Action-->
                                <div class="pb-lg-0 pb-5 ">
                                    <button type="button" id="f-login" class="btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3">Kaydet</button>
                                </div>
                                <!--end::Action-->
                            </form>
                            <!--end::Form-->
                        </div>
                        <!--end::Signin-->
                    </div>
                    <!--end::Content body-->
                </div>
                <!--end::Content-->
            </div>
        </div>
    </div>
</div>
<link href="/assets-site/css/login/login-1.css" rel="stylesheet" />
<script src="/assets-site/css/login/login-1.js"></script>
<script type="text/javascript">

    "use strict";

    // Class Definition
    var KTLogin = function () {
        var _login;

        var _showForm = function (form) {
            var cls = 'login-' + form + '-on';
            var form = 'kt_login_' + form + '_form';

            _login.removeClass('login-forgot-on');
            _login.removeClass('login-signin-on');
            _login.removeClass('login-signup-on');

            _login.addClass(cls);

            KTUtil.animateClass(KTUtil.getById(form), 'animate__animated animate__backInUp');
        }

        var _handleSignInForm = function () {
            var validation;

            // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/
            validation = FormValidation.formValidation(
                KTUtil.getById('kt_login_signin_form'),
                {
                    fields: {
                        Pass: {
                            validators: {
                                notEmpty: {
                                    message: 'Şifre Giriniz'
                                }
                            },
                        },
                        PassReply: {
                            validators: {
                                notEmpty: {
                                    message: 'Şifre Tekrar Giriniz'
                                }
                            },
                            identical: {
                                compare: function () {
                                    return form.querySelector('[name="Pass"]').value;
                                },
                                message: 'Şifreler Eşleşmiyor'
                            }
                        },
                        Name: {
                            validators: {
                                notEmpty: {
                                    message: 'Ad Giriniz'
                                }
                            }
                        },
                        Surname: {
                            validators: {
                                notEmpty: {
                                    message: 'Soyad Giriniz'
                                }
                            }
                        },
                        UserName: {
                            validators: {
                                notEmpty: {
                                    message: 'Mail Adresi Giriniz'
                                }
                            }
                        },
                        Phone1: {
                            validators: {
                                notEmpty: {
                                    message: 'Telefon Giriniz'
                                }
                            }
                        },
                        Company: {
                            validators: {
                                notEmpty: {
                                    message: 'Firma Giriniz'
                                }
                            }
                        },
                        Custom3: {
                            validators: {
                                notEmpty: {
                                    message: 'Lütfen Kullanım Koşullarını Onaylayınız'
                                }
                            }
                        },
                        dp_UserType: {
                            validators: {
                                notEmpty: {
                                    message: 'Kullanıcı Tipi Giriniz'
                                }
                            }
                        }

                    },
                    plugins: {
                        trigger: new FormValidation.plugins.Trigger(),
                        submitButton: new FormValidation.plugins.SubmitButton(),
                        //defaultSubmit: new FormValidation.plugins.DefaultSubmit(), // Uncomment this line to enable normal button submit after form validation
                        bootstrap: new FormValidation.plugins.Bootstrap()
                    }
                }
            );


            $('#f-login').on('click', function (e) {

                e.preventDefault();
                validation.validate().then(function (status) {
                    console.log("afterValidate");
                    console.log("status " + status);
                    if (status == 'Valid') {
                        var postModel = $.fn.toForm("#kt_login_signin_form");

                        debugger;
                        if (postModel.Pass != postModel.PassReply) {
                            alert('Şifreler Eşleşmiyor...');
                            return;
                        }

                        $.ajx('/Base/UserCreate', postModel, function (result) {

                            debugger;
                            if (result?.ResultType?.RType == 1) {
                                swal.fire({
                                    text: "Üyelik kaydınız başarıyla oluşturulmuştur. Yetkili birim en kısa sürede onaylayacaktır.",
                                    icon: "success",
                                    buttonsStyling: false,
                                    confirmButtonText: "Tamam",
                                    customClass: {
                                        confirmButton: "btn font-weight-bold btn-light-primary"
                                    }
                                }).then(function () {
                                    KTUtil.scrollTop();
                                    window.location.reload();
                                });

                                
                            }
                            else if (result == "Duplicate") {
                                KTUtil.scrollTop();
                                swal.fire({
                                    text: "Bu üye kayıtlı. Lütfen farklı bir e-posta adresi ile deneyiniz.",
                                    icon: "error",
                                    buttonsStyling: false,
                                    confirmButtonText: "Tamam",
                                    customClass: {
                                        confirmButton: "btn font-weight-bold btn-light-primary"
                                    }
                                }).then(function () {
                                    KTUtil.scrollTop();
                                    window.location.reload();
                                });
                            }

                        });


                    } else {
                        //swal.fire({
                        //    text: "Hata, lütfen daha sonra tekrar deneyiniz.",
                        //    icon: "error",
                        //    buttonsStyling: false,
                        //    confirmButtonText: "Tamam",
                        //    customClass: {
                        //        confirmButton: "btn font-weight-bold btn-light-primary"
                        //    }
                        //}).then(function () {
                        //    KTUtil.scrollTop();
                        //});
                    }
                });
            });


            // Handle forgot button
            $('#kt_login_forgot').on('click', function (e) {
                e.preventDefault();
                _showForm('forgot');
            });

            // Handle signup
            $('#kt_login_signup').on('click', function (e) {
                e.preventDefault();
                _showForm('signup');
            });
        }

        var _handleSignUpForm = function (e) {
            var validation;
            var form = KTUtil.getById('kt_login_signup_form');

            // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/
            validation = FormValidation.formValidation(
                form,
                {
                    fields: {
                        fullname: {
                            validators: {
                                notEmpty: {
                                    message: 'Username is required'
                                }
                            }
                        },
                        email: {
                            validators: {
                                notEmpty: {
                                    message: 'Email address is required'
                                },
                                emailAddress: {
                                    message: 'The value is not a valid email address'
                                }
                            }
                        },
                        password: {
                            validators: {
                                notEmpty: {
                                    message: 'The password is required'
                                }
                            }
                        },
                        cpassword: {
                            validators: {
                                notEmpty: {
                                    message: 'The password confirmation is required'
                                },
                                identical: {
                                    compare: function () {
                                        return form.querySelector('[name="password"]').value;
                                    },
                                    message: 'The password and its confirm are not the same'
                                }
                            }
                        },
                        agree: {
                            validators: {
                                notEmpty: {
                                    message: 'You must accept the terms and conditions'
                                }
                            }
                        },
                    },
                    plugins: {
                        trigger: new FormValidation.plugins.Trigger(),
                        bootstrap: new FormValidation.plugins.Bootstrap()
                    }
                }
            );

            $('#kt_login_signup_submit').on('click', function (e) {
                e.preventDefault();

                validation.validate().then(function (status) {
                    if (status == 'Valid') {
                        swal.fire({
                            text: "All is cool! Now you submit this form",
                            icon: "success",
                            buttonsStyling: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn font-weight-bold btn-light-primary"
                            }
                        }).then(function () {
                            KTUtil.scrollTop();
                        });
                    } else {
                        swal.fire({
                            text: "Sorry, looks like there are some errors detected, please try again.",
                            icon: "error",
                            buttonsStyling: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn font-weight-bold btn-light-primary"
                            }
                        }).then(function () {
                            KTUtil.scrollTop();
                        });
                    }
                });
            });

            // Handle cancel button
            $('#kt_login_signup_cancel').on('click', function (e) {
                e.preventDefault();

                _showForm('signin');
            });
        }

        var _handleForgotForm = function (e) {
            var validation;

            // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/
            validation = FormValidation.formValidation(
                KTUtil.getById('kt_login_forgot_form'),
                {
                    fields: {
                        email: {
                            validators: {
                                notEmpty: {
                                    message: 'Email address is required'
                                },
                                emailAddress: {
                                    message: 'The value is not a valid email address'
                                }
                            }
                        }
                    },
                    plugins: {
                        trigger: new FormValidation.plugins.Trigger(),
                        bootstrap: new FormValidation.plugins.Bootstrap()
                    }
                }
            );

            // Handle submit button
            $('#kt_login_forgot_submit').on('click', function (e) {
                e.preventDefault();
                validation.validate().then(function (status) {
                    if (status == 'Valid') {




                    } else {
                        swal.fire({
                            text: "Sorry, looks like there are some errors detected, please try again.",
                            icon: "error",
                            buttonsStyling: false,
                            confirmButtonText: "Ok, got it!",
                            customClass: {
                                confirmButton: "btn font-weight-bold btn-light-primary"
                            }
                        }).then(function () {
                            KTUtil.scrollTop();
                        });
                    }
                });
            });

            // Handle cancel button
            $('#kt_login_forgot_cancel').on('click', function (e) {
                e.preventDefault();

                _showForm('signin');
            });
        }

        // Public Functions
        return {
            // public functions
            init: function () {
                _login = $('#kt_login');

                _handleSignInForm();
                console.log("DOne-1");
                // _handleSignUpForm();
                // _handleForgotForm();
            }
        };
    }();

    // Class Initialization
    jQuery(document).ready(function () {
        KTLogin.init();
    });


</script>












